.. index:: pair: class; sophus::MutImageView
.. _doxid-classsophus_1_1_mut_image_view:

template class sophus::MutImageView
===================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

View of a mutable image, which does not own the data. :ref:`More...<details-classsophus_1_1_mut_image_view>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <image_view.h>
	
	template <class PixelT>
	class MutImageView: public :ref:`sophus::ImageView<doxid-structsophus_1_1_image_view>` {
	public:
		// construction
	
		:ref:`MutImageView<doxid-classsophus_1_1_mut_image_view_1a93fe398728dc3ad90e99d7f3c70aa046>`();
		:ref:`MutImageView<doxid-classsophus_1_1_mut_image_view_1aa3c1b4ec2c17247dbe2fb12eac881354>`(:ref:`ImageShape<doxid-classsophus_1_1_image_shape>` shape, PixelT* ptr);
		:ref:`MutImageView<doxid-classsophus_1_1_mut_image_view_1a08067073c4dc10c162bedcae27088b5b>`(:ref:`sophus::ImageSize<doxid-structsophus_1_1_image_size>` image_size, PixelT* ptr);

		// methods
	
		:ref:`ImageView<doxid-structsophus_1_1_image_view>`<PixelT> :ref:`view<doxid-classsophus_1_1_mut_image_view_1aeff2707d7d803ee69c01d017a65e9905>`() const;
		void :ref:`copyDataFrom<doxid-classsophus_1_1_mut_image_view_1a8d1c99e38144096995f80049fa14b4ca>`(:ref:`ImageView<doxid-structsophus_1_1_image_view>`<PixelT> view) const;
		PixelT* :ref:`mutRowPtr<doxid-classsophus_1_1_mut_image_view_1acc8c79be6bcf6705518da71d41c725cf>`(int v) const;
		PixelT& :ref:`checkedMut<doxid-classsophus_1_1_mut_image_view_1a8ddaa54665fc2173f1692481caa2a695>`(int u, int v) const;
		PixelT& :target:`checkedMut<doxid-classsophus_1_1_mut_image_view_1af9d16e4b89074f49e4910759ab9f4c41>`(Eigen::Vector2i uv) const;
		PixelT& :ref:`uncheckedMut<doxid-classsophus_1_1_mut_image_view_1a48aabc7deb35765eade7758d6caa472e>`(int u, int v) const;
		PixelT& :target:`uncheckedMut<doxid-classsophus_1_1_mut_image_view_1a3e6c916db3f33f6cc78d34390e91798d>`(Eigen::Vector2i uv) const;
	
		template <class UnaryOperationT>
		void :ref:`mutate<doxid-classsophus_1_1_mut_image_view_1a83241706e6879e29c17d8653e8d87294>`(const UnaryOperationT& unary_op) const;
	
		template <class OtherPixelT, class UnaryOperationT>
		void :ref:`transformFrom<doxid-classsophus_1_1_mut_image_view_1a258f7c16e5eced544c89b67addd17b5e>`(
			:ref:`ImageView<doxid-structsophus_1_1_image_view>`<OtherPixelT> view,
			const UnaryOperationT& unary_op
			) const;
	
		template <class LhsPixelT, class RhsPixelT, class BinaryOperationT>
		void :ref:`transformFrom<doxid-classsophus_1_1_mut_image_view_1ab5147bff52d5ddd5400863c0958faef8>`(
			:ref:`ImageView<doxid-structsophus_1_1_image_view>`<LhsPixelT> lhs,
			:ref:`ImageView<doxid-structsophus_1_1_image_view>`<RhsPixelT> rhs,
			const BinaryOperationT& binary_op
			) const;
	
		void :ref:`fill<doxid-classsophus_1_1_mut_image_view_1a988479e79027c810c9f5f767a87ce48a>`(const PixelT& val) const;
		PixelT* :ref:`mutData<doxid-classsophus_1_1_mut_image_view_1a12892650b7ba468971b0446cfa36ceb6>`() const;
		MutImageView :ref:`mutSubview<doxid-classsophus_1_1_mut_image_view_1ae613259588daec1516a3d990619ba256>`(Eigen::Vector2i uv, :ref:`sophus::ImageSize<doxid-structsophus_1_1_image_size>` size) const;
		static MutImageView :ref:`unsafeConstCast<doxid-classsophus_1_1_mut_image_view_1a30e67ab5bb0322544de670dff40c81d8>`(:ref:`ImageView<doxid-structsophus_1_1_image_view>`<PixelT> view);
	};

	// direct descendants

	template <
		class PixelT,
		template<typename> class AllocatorT = Eigen::aligned_allocator
		>
	class :ref:`MutImage<doxid-classsophus_1_1_mut_image>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		bool :ref:`isEmpty<doxid-structsophus_1_1_image_view_1aaa668b0af726468b3bd2683664d2b436>`() const;
		bool :ref:`isContiguous<doxid-structsophus_1_1_image_view_1a1bd56b9a976edfb97da4641530a4d884>`();
		:ref:`sophus::ImageSize<doxid-structsophus_1_1_image_size>` const& :ref:`imageSize<doxid-structsophus_1_1_image_view_1a9c91a9b91e771adae8f3d4ca84a94fd9>`() const;
		:ref:`ImageShape<doxid-classsophus_1_1_image_shape>` const& :ref:`shape<doxid-structsophus_1_1_image_view_1ad16825882e671a05bf225b486e3a2353>`() const;
		int :ref:`width<doxid-structsophus_1_1_image_view_1ae2211bc7c2f77c77865b3298dfa5b483>`() const;
		int :ref:`height<doxid-structsophus_1_1_image_view_1a854204b8493083da1d167255bddd2460>`() const;
		size_t :ref:`pitchBytes<doxid-structsophus_1_1_image_view_1a2946b7c9af8c0854a6c42448c81c325f>`() const;
		bool :ref:`colInBounds<doxid-structsophus_1_1_image_view_1a0c4e617b87689307dfa800ee448b9a49>`(int u) const;
		bool :ref:`rowInBounds<doxid-structsophus_1_1_image_view_1a12131b7c9063a7d89421e73faaa95cfb>`(int v) const;
		PixelT const* :ref:`rowPtr<doxid-structsophus_1_1_image_view_1a633b273fc5bdbd197e3abc6b569e0391>`(int v) const;
		PixelT const& :ref:`checked<doxid-structsophus_1_1_image_view_1aa409f1b7cc9dc14f0d366f44fb38d5c3>`(int u, int v) const;
		PixelT const& :ref:`checked<doxid-structsophus_1_1_image_view_1a255adf8e1e0aecca27e2df720951c586>`(Eigen::Vector2i uv) const;
		PixelT const& :ref:`unchecked<doxid-structsophus_1_1_image_view_1ae44c5748efbf4b7c0c90b85d4ac02976>`(int u, int v) const;
		PixelT const& :ref:`unchecked<doxid-structsophus_1_1_image_view_1a63f9e2ac00674d04598e2eba15a4b9af>`(Eigen::Vector2i uv) const;
		PixelT const* :ref:`data<doxid-structsophus_1_1_image_view_1a8571da7d58ef1225854f1a29addd4de2>`() const;
		:ref:`ImageView<doxid-structsophus_1_1_image_view>` :ref:`subview<doxid-structsophus_1_1_image_view_1ac65af4ec779959aa561ac57cd9b30a74>`(Eigen::Vector2i uv, :ref:`sophus::ImageSize<doxid-structsophus_1_1_image_size>` size) const;
	
		template <class ReduceOpT, class ValT>
		ValT :ref:`reduce<doxid-structsophus_1_1_image_view_1aae8aa511af60dcf9fa820228ff2c59e5>`(
			const ReduceOpT& reduce_op,
			ValT val = ValT{}
			) const;
	
		template <class ShortCircuitReduceOpT, class ValT>
		ValT :ref:`shortCircuitReduce<doxid-structsophus_1_1_image_view_1afcd53d4b256323275b0112949dea1387>`(
			const ShortCircuitReduceOpT& short_circuit_reduce_op,
			ValT val = ValT{}
			) const;
	
		bool :ref:`operator==<doxid-structsophus_1_1_image_view_1a604bea6b9f4332c367fe6a2da33e53bf>`(const :ref:`ImageView<doxid-structsophus_1_1_image_view>`& rhs);

	protected:
		// fields
	
		:ref:`ImageShape<doxid-classsophus_1_1_image_shape>` :ref:`shape_<doxid-structsophus_1_1_image_view_1a2c341454e66c51e706df6631597c97d2>` = {};
		PixelT const* :ref:`ptr_<doxid-structsophus_1_1_image_view_1a104b4d2a3c41b20973235c6d5e8c1d86>` = nullptr;

		// methods
	
		void :ref:`setViewToEmpty<doxid-structsophus_1_1_image_view_1aba91c44d559dac0fdc9bda95c4a47d98>`();

.. _details-classsophus_1_1_mut_image_view:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

View of a mutable image, which does not own the data.

The API of :ref:`MutImageView <doxid-classsophus_1_1_mut_image_view>` allows for read and write access.

:ref:`MutImageView <doxid-classsophus_1_1_mut_image_view>` is nullable. In that case ``this->:ref:`isEmpty() <doxid-structsophus_1_1_image_view_1aaa668b0af726468b3bd2683664d2b436>``` is true.

Construction
------------

.. index:: pair: function; MutImageView
.. _doxid-classsophus_1_1_mut_image_view_1a93fe398728dc3ad90e99d7f3c70aa046:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	MutImageView()

Default constructor creates an empty image.

.. index:: pair: function; MutImageView
.. _doxid-classsophus_1_1_mut_image_view_1aa3c1b4ec2c17247dbe2fb12eac881354:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	MutImageView(:ref:`ImageShape<doxid-classsophus_1_1_image_shape>` shape, PixelT* ptr)

Creates view from shape and pointer to first pixel.

.. index:: pair: function; MutImageView
.. _doxid-classsophus_1_1_mut_image_view_1a08067073c4dc10c162bedcae27088b5b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	MutImageView(:ref:`sophus::ImageSize<doxid-structsophus_1_1_image_size>` image_size, PixelT* ptr)

Creates view from image size and pointer to first pixel. The image is assumed to be contiguous and the pitch is set accordingly.

Methods
-------

.. index:: pair: function; view
.. _doxid-classsophus_1_1_mut_image_view_1aeff2707d7d803ee69c01d017a65e9905:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`ImageView<doxid-structsophus_1_1_image_view>`<PixelT> view() const

Returns ImageView(\*this).

Returns non-mut version of view.

.. index:: pair: function; copyDataFrom
.. _doxid-classsophus_1_1_mut_image_view_1a8d1c99e38144096995f80049fa14b4ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void copyDataFrom(:ref:`ImageView<doxid-structsophus_1_1_image_view>`<PixelT> view) const

Copies data from view into this.

Preconditions:

* this-> :ref:`isEmpty() <doxid-structsophus_1_1_image_view_1aaa668b0af726468b3bd2683664d2b436>` == view.isEmpty()

* this->size() == view.size()

No-op if view is empty.

.. index:: pair: function; mutRowPtr
.. _doxid-classsophus_1_1_mut_image_view_1acc8c79be6bcf6705518da71d41c725cf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	PixelT* mutRowPtr(int v) const

Returns v-th row pointer of mutable pixel.

.. index:: pair: function; checkedMut
.. _doxid-classsophus_1_1_mut_image_view_1a8ddaa54665fc2173f1692481caa2a695:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	PixelT& checkedMut(int u, int v) const

Mutable accessor to pixel u, v.

Precondition: u must be in [0, width) and v must be in [0, height).

Note:

* panics if u,v is invalid.

.. index:: pair: function; uncheckedMut
.. _doxid-classsophus_1_1_mut_image_view_1a48aabc7deb35765eade7758d6caa472e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	PixelT& uncheckedMut(int u, int v) const

Mutable accessor to pixel u, v.

Precondition: u must be in [0, width) and v must be in [0, height). Silent UB on failure.

.. index:: pair: function; mutate
.. _doxid-classsophus_1_1_mut_image_view_1a83241706e6879e29c17d8653e8d87294:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class UnaryOperationT>
	void mutate(const UnaryOperationT& unary_op) const

Mutates each pixel of this with given unary operation.

Preconditions: this must not be empty.

.. index:: pair: function; transformFrom
.. _doxid-classsophus_1_1_mut_image_view_1a258f7c16e5eced544c89b67addd17b5e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class OtherPixelT, class UnaryOperationT>
	void transformFrom(
		:ref:`ImageView<doxid-structsophus_1_1_image_view>`<OtherPixelT> view,
		const UnaryOperationT& unary_op
		) const

Transforms view using unary operation and assigns result to this.

Preconditions:

* this must not be empty.

* this-> :ref:`imageSize() <doxid-structsophus_1_1_image_view_1a9c91a9b91e771adae8f3d4ca84a94fd9>` == view.imageSize()

.. index:: pair: function; transformFrom
.. _doxid-classsophus_1_1_mut_image_view_1ab5147bff52d5ddd5400863c0958faef8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class LhsPixelT, class RhsPixelT, class BinaryOperationT>
	void transformFrom(
		:ref:`ImageView<doxid-structsophus_1_1_image_view>`<LhsPixelT> lhs,
		:ref:`ImageView<doxid-structsophus_1_1_image_view>`<RhsPixelT> rhs,
		const BinaryOperationT& binary_op
		) const

Transforms two views using binary operation and assigns result to this.

Preconditions:

* this must not be empty.

* this-> :ref:`imageSize() <doxid-structsophus_1_1_image_view_1a9c91a9b91e771adae8f3d4ca84a94fd9>` == lhs.imageSize() == rhs.imageSize()

.. index:: pair: function; fill
.. _doxid-classsophus_1_1_mut_image_view_1a988479e79027c810c9f5f767a87ce48a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void fill(const PixelT& val) const

Populates every pixel of this with val.

Preconditions: this must not be empty.

.. index:: pair: function; mutData
.. _doxid-classsophus_1_1_mut_image_view_1a12892650b7ba468971b0446cfa36ceb6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	PixelT* mutData() const

Returns pointer of mutable data to first pixel.

.. index:: pair: function; mutSubview
.. _doxid-classsophus_1_1_mut_image_view_1ae613259588daec1516a3d990619ba256:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	MutImageView mutSubview(Eigen::Vector2i uv, :ref:`sophus::ImageSize<doxid-structsophus_1_1_image_size>` size) const

Returns mutable subview.

.. index:: pair: function; unsafeConstCast
.. _doxid-classsophus_1_1_mut_image_view_1a30e67ab5bb0322544de670dff40c81d8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static MutImageView unsafeConstCast(:ref:`ImageView<doxid-structsophus_1_1_image_view>`<PixelT> view)

Creates mutable view from view.

It is the user's responsibility to make sure that the data owned by the view can be modified safely.

